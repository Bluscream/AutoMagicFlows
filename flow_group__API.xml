<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<data version="1.34.0">
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: global_api_loader_spinner_rotate</name>
    <expression>global_api_loader_spinner_rotate</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: if (convertNull(value, false)) { setValue(_tmp_value, value); } convertNull(api_getApps, false);</name>
    <expression>if (convertNull(value, false)) {
  setValue(_tmp_value, value);
}
convertNull(api_getApps, false);</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: operation == "ok"</name>
    <expression>operation == "ok"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: rot &gt;= 179.00</name>
    <expression>rot &gt;= 179.00</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>false</useDefaultName>
    <name>Function: api_getPixel</name>
    <expression>convertNull(api_getPixel, false);</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>false</useDefaultName>
    <name>Functions: api_getApp | api_getApps
param: str: api_getApp_title | api_getApps_title
param: str: api_getApp_default | api_getApps_default
return: str: api_getApp_app | api_getApps_apps</name>
    <expression>convertNull(api_getApp, false) or convertNull(api_getApps, false)</expression>
  </condition>
  <action type="control_user_interface">
    <useDefaultName>true</useDefaultName>
    <name>Control UI: rot = 180.00</name>
    <script>rot = 180.00</script>
  </action>
  <action type="control_user_interface">
    <useDefaultName>true</useDefaultName>
    <name>Control UI: setWidgetElementProperty("Loader", "Spinning Gear", "rotation", rot);</name>
    <script>setWidgetElementProperty("Loader", "Spinning Gear", "rotation", rot);</script>
  </action>
  <action type="execute_flows">
    <useDefaultName>true</useDefaultName>
    <name>Execute Flows: API</name>
    <includeFlowNamePatternList>API</includeFlowNamePatternList>
    <excludeFlowNamePatternList></excludeFlowNamePatternList>
    <skipDisabledFlowsWithoutError>false</skipDisabledFlowsWithoutError>
    <waitForFlowsToFinish>true</waitForFlowsToFinish>
    <returnLocalVariablesToCallingFlow>true</returnLocalVariablesToCallingFlow>
  </action>
  <action type="execute_flows">
    <useDefaultName>false</useDefaultName>
    <name>Execute Flows: Debugger </name>
    <includeFlowNamePatternList>Debugger</includeFlowNamePatternList>
    <excludeFlowNamePatternList></excludeFlowNamePatternList>
    <skipDisabledFlowsWithoutError>false</skipDisabledFlowsWithoutError>
    <waitForFlowsToFinish>true</waitForFlowsToFinish>
    <returnLocalVariablesToCallingFlow>true</returnLocalVariablesToCallingFlow>
  </action>
  <action type="execute_flows">
    <useDefaultName>true</useDefaultName>
    <name>Execute Flows: Rotate Loader</name>
    <includeFlowNamePatternList>Rotate Loader</includeFlowNamePatternList>
    <excludeFlowNamePatternList></excludeFlowNamePatternList>
    <skipDisabledFlowsWithoutError>false</skipDisabledFlowsWithoutError>
    <waitForFlowsToFinish>false</waitForFlowsToFinish>
    <returnLocalVariablesToCallingFlow>false</returnLocalVariablesToCallingFlow>
  </action>
  <action type="hide_custom_widget_overlay">
    <useDefaultName>true</useDefaultName>
    <name>Hide Custom Widget Overlay: Loader</name>
    <overlayNames>Loader</overlayNames>
  </action>
  <action type="init_variable_package_info">
    <useDefaultName>true</useDefaultName>
    <name>Init Variable Package Info: All Packages into _package_info</name>
    <variable>_package_info</variable>
    <all>true</all>
    <packageNames></packageNames>
    <permissionInfo>false</permissionInfo>
    <activityInfo>false</activityInfo>
    <receiverInfo>false</receiverInfo>
    <providerInfo>false</providerInfo>
    <serviceInfo>false</serviceInfo>
  </action>
  <action type="input_dialog">
    <useDefaultName>true</useDefaultName>
    <name>Input Dialog: {api_getApp_title} Single Choice {_names,listformat,comma}</name>
    <title>{api_getApp_title}</title>
    <inputDialogType>SINGLE_CHOICE</inputDialogType>
    <prompt></prompt>
    <inputValues>{_names,listformat,comma}</inputValues>
    <defaultValue>{api_getApp_default}</defaultValue>
    <titleFontSize>DEFAULT</titleFontSize>
    <promptFontSize>DEFAULT</promptFontSize>
    <fontSize>DEFAULT</fontSize>
    <timeoutEnabled>false</timeoutEnabled>
    <timeout>60000</timeout>
    <defaultValueOnTimeout></defaultValueOnTimeout>
    <showWhenLocked>false</showWhenLocked>
    <turnScreenOn>false</turnScreenOn>
    <keepScreenOn>false</keepScreenOn>
    <enlargeDialogWidth>false</enlargeDialogWidth>
  </action>
  <action type="input_dialog">
    <useDefaultName>true</useDefaultName>
    <name>Input Dialog: {api_getApps_title} Multi Choice {_names,listformat,comma}</name>
    <title>{api_getApps_title}</title>
    <inputDialogType>MULTI_CHOICE</inputDialogType>
    <prompt></prompt>
    <inputValues>{_names,listformat,comma}</inputValues>
    <defaultValue>{api_getApps_default}</defaultValue>
    <titleFontSize>DEFAULT</titleFontSize>
    <promptFontSize>DEFAULT</promptFontSize>
    <fontSize>DEFAULT</fontSize>
    <timeoutEnabled>false</timeoutEnabled>
    <timeout>60000</timeout>
    <defaultValueOnTimeout></defaultValueOnTimeout>
    <showWhenLocked>false</showWhenLocked>
    <turnScreenOn>false</turnScreenOn>
    <keepScreenOn>false</keepScreenOn>
    <enlargeDialogWidth>false</enlargeDialogWidth>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: _keys = getMapKeys(_package_info); _packages = newMap(); _names = newList(); for (k in _keys) { _name = getAppName(k); addElement(_names, _name); addMapEntry(_packages, _name, k); } sort(_names);</name>
    <script>_keys = getMapKeys(_package_info);
_packages = newMap();
_names = newList();
for (k in _keys) {
  _name = getAppName(k);
  addElement(_names, _name);
  addMapEntry(_packages, _name, k);
}
sort(_names);</script>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: api_getApp = true;</name>
    <script>api_getApp = true;</script>
  </action>
  <action type="script">
    <useDefaultName>false</useDefaultName>
    <name>Script: Destruct Loader</name>
    <script>removeVariable(global_api_loader_spinner_rotate);
setWidgetElementProperty("Loader", "Content", "text", "");</script>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: if (convertNull(_tmp_value, false)) { setValue(value, getValue(_tmp_value)); }</name>
    <script>if (convertNull(_tmp_value, false)) { 
  setValue(value, getValue(_tmp_value));
}</script>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: if (isList(value)) { _apps = newList(); for (i in value) { addElement(_apps, getMapValue(_packages, value)); } setValue('api_getApps_apps', _apps); } else if (isString(value)) { setValue('api_getApp_app', getMapValue(_packages, value)); }</name>
    <script>if (isList(value)) {
  _apps = newList();
  for (i in value) {
    addElement(_apps, getMapValue(_packages, value));
  }
  setValue('api_getApps_apps', _apps);
} else if (isString(value)) {
  setValue('api_getApp_app', getMapValue(_packages, value));
}</script>
  </action>
  <action type="script">
    <useDefaultName>false</useDefaultName>
    <name>Script: Prepare Loader</name>
    <script>setWidgetElementProperty("Loader", "Content", "text", "Loading apps, please wait...");</script>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: rot = 0.0; global_api_loader_spinner_rotate = true;</name>
    <script>rot = 0.0;
global_api_loader_spinner_rotate = true;</script>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: setValue(api_getApp, true);</name>
    <script>setValue(api_getApp, true);</script>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: setWidgetElementProperty("Loader", "Spinning Gear", "rotation", 0.0);</name>
    <script>setWidgetElementProperty("Loader", "Spinning Gear", "rotation", 0.0);</script>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: while (global_api_loader_spinner_rotate) { if (rot &gt;= 179) { rot = -180; } rot = rot + 0.1; setWidgetElementProperty("Loader", "Spinning Gear", "rotation", rot); sleep(100); }</name>
    <script>while (global_api_loader_spinner_rotate)
{
  if (rot &gt;= 179) { rot = -180; }
  rot = rot + 0.1;
  setWidgetElementProperty("Loader", "Spinning Gear", "rotation", rot);
  sleep(100);
}</script>
  </action>
  <action type="show_custom_widget_overlay">
    <useDefaultName>true</useDefaultName>
    <name>Show Custom Widget Overlay: Loader, Loader (634*800) Center</name>
    <overlayName>Loader</overlayName>
    <widgetName>Loader</widgetName>
    <width>634</width>
    <height>800</height>
    <gravityType>CENTER_CENTER</gravityType>
    <xOffset>0</xOffset>
    <yOffset>50</yOffset>
    <draggable>false</draggable>
    <opacity>1.00</opacity>
    <clickable>false</clickable>
    <stretchToFillArea>false</stretchToFillArea>
  </action>
  <action type="sleep">
    <useDefaultName>true</useDefaultName>
    <name>Sleep: 100ms (allow device sleep)</name>
    <duration>100ms</duration>
    <keepDeviceAwake>false</keepDeviceAwake>
    <allowWakeupFromDeviceIdle>false</allowWakeupFromDeviceIdle>
  </action>
  <flow type="flow">
    <name>API</name>
    <group>. API</group>
    <enabled>true</enabled>
    <executionPolicy>PARALLEL</executionPolicy>
    <actioncontainer id="t1" x="-349.99997" y="892.50006">Input Dialog: {api_getApp_title} Single Choice {_names,listformat,comma}</actioncontainer>
    <actioncontainer id="t2" x="-140.0" y="892.5">Input Dialog: {api_getApps_title} Multi Choice {_names,listformat,comma}</actioncontainer>
    <conditioncontainer id="t3" x="-244.99988" y="1067.4999">Expression: operation == "ok"</conditioncontainer>
    <actioncontainer id="t4" x="-139.99985" y="1207.5002">Script: if (isList(value)) { _apps = newList(); for (i in value) { addElement(_apps, getMapValue(_packages, value)); } setValue('api_getApps_apps', _apps); } else if (isString(value)) { setValue('api_getApp_app', getMapValue(_packages, value)); }</actioncontainer>
    <conditioncontainer id="t5" x="279.99988" y="87.49999">Function: api_getPixel</conditioncontainer>
    <triggercontainer id="t6" x="35.000008" y="577.50024" />
    <actioncontainer id="t7" x="35.0" y="157.5">Script: api_getApp = true;</actioncontainer>
    <actioncontainer id="t8" x="-245.0" y="87.50002">Show Custom Widget Overlay: Loader, Loader (634*800) Center</actioncontainer>
    <conditioncontainer id="t9" x="-244.99998" y="752.5">Expression: if (convertNull(value, false)) { setValue(_tmp_value, value); } convertNull(api_getApps, false);</conditioncontainer>
    <actioncontainer id="t10" x="-244.99997" y="1347.5">Script: if (convertNull(_tmp_value, false)) { setValue(value, getValue(_tmp_value)); }</actioncontainer>
    <actioncontainer id="t11" x="-419.99997" y="507.5">Hide Custom Widget Overlay: Loader</actioncontainer>
    <actioncontainer id="t12" x="-455.0" y="-87.5">Script: Prepare Loader</actioncontainer>
    <actioncontainer id="t13" x="-245.0" y="227.49992">Init Variable Package Info: All Packages into _package_info</actioncontainer>
    <actioncontainer id="t14" x="-245.00009" y="612.5">Script: Destruct Loader</actioncontainer>
    <actioncontainer id="t15" x="-245.0" y="402.49994">Script: _keys = getMapKeys(_package_info); _packages = newMap(); _names = newList(); for (k in _keys) { _name = getAppName(k); addElement(_names, _name); addMapEntry(_packages, _name, k); } sort(_names);</actioncontainer>
    <conditioncontainer id="t16" x="-245.0" y="-122.499954">Functions: api_getApp | api_getApps
param: str: api_getApp_title | api_getApps_title
param: str: api_getApp_default | api_getApps_default
return: str: api_getApp_app | api_getApps_apps</conditioncontainer>
    <actioncontainer id="t17" x="-455.00003" y="87.499985">Execute Flows: Rotate Loader</actioncontainer>
    <connection from="t1" to="t3" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t2" to="t3" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t3" to="t4" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t3" to="t10" type="FALSE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t4" to="t10" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t6" to="t5" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t6" to="t7" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t7" to="t16" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t8" to="t13" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t9" to="t2" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t9" to="t1" type="FALSE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t11" to="t14" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t12" to="t17" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t13" to="t15" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t14" to="t9" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t15" to="t11" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t16" to="t12" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t17" to="t8" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
  </flow>
  <flow type="flow">
    <name>API Test</name>
    <group>. API</group>
    <enabled>false</enabled>
    <executionPolicy>PARALLEL</executionPolicy>
    <triggercontainer id="t1" x="70.0" y="52.5" />
    <actioncontainer id="t2" x="70.0" y="857.5">Execute Flows: Debugger </actioncontainer>
    <actioncontainer id="t3" x="70.00001" y="612.5">Execute Flows: API</actioncontainer>
    <actioncontainer id="t4" x="70.0" y="332.5">Script: setValue(api_getApp, true);</actioncontainer>
    <connection from="t1" to="t4" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t3" to="t2" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t4" to="t3" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
  </flow>
  <flow type="flow">
    <name>Rotate Loader</name>
    <group>. API</group>
    <enabled>true</enabled>
    <executionPolicy>PARALLEL</executionPolicy>
    <triggercontainer id="t1" x="105.00001" y="-17.50002" />
    <actioncontainer id="t2" x="105.00002" y="122.5">Script: rot = 0.0; global_api_loader_spinner_rotate = true;</actioncontainer>
    <conditioncontainer id="t3" x="0.0" y="367.5">Expression: rot &gt;= 179.00</conditioncontainer>
    <actioncontainer id="t4" x="-700.0" y="367.50012">Script: while (global_api_loader_spinner_rotate) { if (rot &gt;= 179) { rot = -180; } rot = rot + 0.1; setWidgetElementProperty("Loader", "Spinning Gear", "rotation", rot); sleep(100); }</actioncontainer>
    <actioncontainer id="t5" x="210.00024" y="1067.5">Script: setWidgetElementProperty("Loader", "Spinning Gear", "rotation", 0.0);</actioncontainer>
    <actioncontainer id="t6" x="34.999996" y="682.49994">Control UI: setWidgetElementProperty("Loader", "Spinning Gear", "rotation", rot);</actioncontainer>
    <actioncontainer id="t7" x="210.0" y="402.5">Sleep: 100ms (allow device sleep)</actioncontainer>
    <conditioncontainer id="t8" x="245.00003" y="612.4999">Expression: global_api_loader_spinner_rotate</conditioncontainer>
    <actioncontainer id="t9" x="-104.99999" y="507.50006">Control UI: rot = 180.00</actioncontainer>
    <connection from="t1" to="t2" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t2" to="t3" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t3" to="t9" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t6" to="t8" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t7" to="t3" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t8" to="t7" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t8" to="t5" type="FALSE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t9" to="t6" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
  </flow>
</data>